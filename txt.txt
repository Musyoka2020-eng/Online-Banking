npm init -y

npm install express
create serve.js in the root folder
<script>
const express = require('express');
const app = express();
const port = 3000;

// Your backend routes and logic here

app.listen(port, () => {
    console.log(`Server is running on http://localhost:${port}`);
});

</script>

npm install sequelize mysql2
Set up Sequelize:
create models folder in your root folder
in  models create User.js
<script>
// models/User.js

const { Sequelize, DataTypes } = require('sequelize');

const sequelize = new Sequelize({
  dialect: 'mysql',
  host: 'localhost', // Your MySQL server host
  username: 'root',   // Your MySQL username
  password: '',       // Your MySQL password
  database: 'online_banking', // Your MySQL database name
});

const User = sequelize.define('User', {
  // Define your user model fields
  filedName: {
    type: DataTypes.STRING,
    allowNull: false,
  },
});

// Sync the model with the database
sequelize.sync()
  .then(() => {
    console.log('User model synced with the database.');
  })
  .catch((error) => {
    console.error('Error syncing User model:', error);
  });

module.exports = User;

</script>

update your serve.js to ensure to config to the frontend

<script>
// server.js

const express = require('express');
const app = express();
const port = process.env.PORT || 3000;

const User = require('./models/User'); // Import the User model

app.use(express.static('public'));

// Your API endpoints and other server logic here

app.listen(port, () => {
    console.log(`Server is running on http://localhost:${port}`);
});

app.get('/api/users', async (req, res) => {
  try {
    const users = await User.findAll();
    res.json(users);
  } catch (error) {
    console.error('Error fetching users:', error);
    res.status(500).json({ error: 'Internal server error' });
  }
});


</script>

Use Fetch API or Axios in Frontend:

<script>
// public/js/script.js

// Example using Fetch API to get users from the server
fetch('/api/users')
  .then(response => response.json())
  .then(users => {
    console.log('Fetched users:', users);
    // Handle the retrieved users as needed
  })
  .catch(error => console.error('Error fetching users:', error));

</script>


node server.js
